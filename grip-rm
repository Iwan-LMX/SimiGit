#!/usr/bin/env python3
import sys, os, re, pickle, argparse
#-----------------------------------------------------#
#--------------Error Messages-------------------------#
#-----------------------------------------------------#
if not os.path.exists(".grip"):
	print("grip-rm: error: grip repository directory .grip not found", file=sys.stderr)
	sys.exit(1)

parser = argparse.ArgumentParser(
	usage='grip-rm [--force] [--cached] <filenames>',
	add_help=False
)	
parser.add_argument('--force', action='store_true')
parser.add_argument('--cached', action='store_true')
parser.add_argument('filenames', nargs='*')

args = parser.parse_args()
if not args.filenames:
	parser.print_usage()
	sys.exit(1)

#-----------------------------------------------------#
#----------------Remove Files-------------------------#
#-----------------------------------------------------#
def remove_file(filename, contents):
	if re.match(r"[a-zA-Z0-9.\-_]+", filename).group() != filename:
		print(f"grip-add: error: invalid filename '{filename}'", file=sys.stderr)
		sys.exit(1)

	if filename not in contents:
		print(f"grip-rm: error: '{filename}' is not in the grip repository", file=sys.stderr)
		sys.exit(1)

	#1. Force option
	if args.force:	
		#delete from index
		del contents[filename]
		#delete from current
		if os.path.exists(filename):
			os.remove(filename)
		return
	#2. Cached Option
	if args.cached:
		#delete from index
		del contents[filename]
		return
	
	#3. Normal Option
	#Staged file
	if contents["@Staged"]: 
		print(f"grip-rm: error: '{filename}' has staged changes in the index", file=sys.stderr)
		sys.exit(1)
	
	del contents[filename]
	if os.path.exists(filename):
		os.remove(filename)

index_path = '.grip/index'
if os.path.exists(index_path):
	index = open(index_path, 'rb')
	contents = pickle.load(index)

	for filename in args.filenames:
		remove_file(filename, contents)
		contents["@Changed"] = True

	index = open(index_path, 'wb')
	pickle.dump(contents, index)
	index.close()
else:
	print(f"grip-rm: error: '{args.filenames[0]}' is not in the grip repository", file=sys.stderr)
	sys.exit(1)
